self["webpackHotUpdatees6_react"](0,{

/***/ 23:
/***/ (() => {

var users = [{
  id: 1,
  firstName: "Idalia",
  lastName: "Franses",
  email: "ifranses0@mapy.cz",
  ipAddress: "180.153.67.217",
  language: "French",
  nin: "3033798411"
}, {
  id: 2,
  firstName: "Frederick",
  lastName: "Prince",
  email: "fprince1@huffingtonpost.com",
  ipAddress: "6.239.37.95",
  language: "English",
  nin: "3884188887"
}, {
  id: 3,
  firstName: "Iago",
  lastName: "MacCathay",
  email: "imaccathay2@wix.com",
  ipAddress: "244.252.97.163",
  language: "Italian",
  nin: "4502080942"
}, {
  id: 4,
  firstName: "Biddie",
  lastName: "Liddard",
  email: "bliddard3@noaa.gov",
  ipAddress: "6.107.79.145",
  language: "French",
  nin: "2931819395"
}, {
  id: 5,
  firstName: "Colas",
  lastName: "Moffett",
  email: "cmoffett4@purevolume.com",
  ipAddress: "200.4.236.255",
  language: "French",
  nin: "1288790260"
}];
var parseUserData = function parseUserData(data) {
  var usersFiltered = data.filter(function (el) {
    return el.language === "French";
  });
  console.log(usersFiltered);
  var newArray = usersFiltered.map(function (el) {
    return {
      name: "".concat(firstName, " ").concat(lastName),
      email: el.email
    };
  });
  console.log(newArray);
};
console.log(parseUserData(users));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("78aaf112103af73fde9e")
/******/ })();
/******/ 
/******/ }
);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC4yNzY5MzU4M2QxZGEzMjZmNmVjYy5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsSUFBTUEsS0FBSyxHQUFHLENBQ1o7RUFDRUMsRUFBRSxFQUFFLENBQUM7RUFDTEMsU0FBUyxFQUFFLFFBQVE7RUFDbkJDLFFBQVEsRUFBRSxTQUFTO0VBQ25CQyxLQUFLLEVBQUUsbUJBQW1CO0VBQzFCQyxTQUFTLEVBQUUsZ0JBQWdCO0VBQzNCQyxRQUFRLEVBQUUsUUFBUTtFQUNsQkMsR0FBRyxFQUFFO0FBQ1AsQ0FBQyxFQUNEO0VBQ0VOLEVBQUUsRUFBRSxDQUFDO0VBQ0xDLFNBQVMsRUFBRSxXQUFXO0VBQ3RCQyxRQUFRLEVBQUUsUUFBUTtFQUNsQkMsS0FBSyxFQUFFLDZCQUE2QjtFQUNwQ0MsU0FBUyxFQUFFLGFBQWE7RUFDeEJDLFFBQVEsRUFBRSxTQUFTO0VBQ25CQyxHQUFHLEVBQUU7QUFDUCxDQUFDLEVBQ0Q7RUFDRU4sRUFBRSxFQUFFLENBQUM7RUFDTEMsU0FBUyxFQUFFLE1BQU07RUFDakJDLFFBQVEsRUFBRSxXQUFXO0VBQ3JCQyxLQUFLLEVBQUUscUJBQXFCO0VBQzVCQyxTQUFTLEVBQUUsZ0JBQWdCO0VBQzNCQyxRQUFRLEVBQUUsU0FBUztFQUNuQkMsR0FBRyxFQUFFO0FBQ1AsQ0FBQyxFQUNEO0VBQ0VOLEVBQUUsRUFBRSxDQUFDO0VBQ0xDLFNBQVMsRUFBRSxRQUFRO0VBQ25CQyxRQUFRLEVBQUUsU0FBUztFQUNuQkMsS0FBSyxFQUFFLG9CQUFvQjtFQUMzQkMsU0FBUyxFQUFFLGNBQWM7RUFDekJDLFFBQVEsRUFBRSxRQUFRO0VBQ2xCQyxHQUFHLEVBQUU7QUFDUCxDQUFDLEVBQ0Q7RUFDRU4sRUFBRSxFQUFFLENBQUM7RUFDTEMsU0FBUyxFQUFFLE9BQU87RUFDbEJDLFFBQVEsRUFBRSxTQUFTO0VBQ25CQyxLQUFLLEVBQUUsMEJBQTBCO0VBQ2pDQyxTQUFTLEVBQUUsZUFBZTtFQUMxQkMsUUFBUSxFQUFFLFFBQVE7RUFDbEJDLEdBQUcsRUFBRTtBQUNQLENBQUMsQ0FDRjtBQUVELElBQU1DLGFBQWEsR0FBRyxTQUFoQkEsYUFBYSxDQUFJQyxJQUFJLEVBQUs7RUFDOUIsSUFBTUMsYUFBYSxHQUFHRCxJQUFJLENBQUNFLE1BQU0sQ0FBQyxVQUFDQyxFQUFFO0lBQUEsT0FBS0EsRUFBRSxDQUFDTixRQUFRLEtBQUssUUFBUTtFQUFBLEVBQUM7RUFDbkVPLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSixhQUFhLENBQUM7RUFDMUIsSUFBTUssUUFBUSxHQUFHTCxhQUFhLENBQUNNLEdBQUcsQ0FBQyxVQUFDSixFQUFFO0lBQUEsT0FBTTtNQUMxQ0ssSUFBSSxZQUFLZixTQUFTLGNBQUlDLFFBQVEsQ0FBRTtNQUNoQ0MsS0FBSyxFQUFFUSxFQUFFLENBQUNSO0lBQ1osQ0FBQztFQUFBLENBQUMsQ0FBQztFQUNIUyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsUUFBUSxDQUFDO0FBQ3ZCLENBQUM7QUFFREYsT0FBTyxDQUFDQyxHQUFHLENBQUNOLGFBQWEsQ0FBQ1IsS0FBSyxDQUFDLENBQUM7Ozs7Ozs7O1VDMURqQyIsInNvdXJjZXMiOlsid2VicGFjazovL2VzNi1yZWFjdC8uLzAyX1phZGFuaWVfMi9qcy9hcHAuanMiLCJ3ZWJwYWNrOi8vZXM2LXJlYWN0L3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB1c2VycyA9IFtcclxuICB7XHJcbiAgICBpZDogMSxcclxuICAgIGZpcnN0TmFtZTogXCJJZGFsaWFcIixcclxuICAgIGxhc3ROYW1lOiBcIkZyYW5zZXNcIixcclxuICAgIGVtYWlsOiBcImlmcmFuc2VzMEBtYXB5LmN6XCIsXHJcbiAgICBpcEFkZHJlc3M6IFwiMTgwLjE1My42Ny4yMTdcIixcclxuICAgIGxhbmd1YWdlOiBcIkZyZW5jaFwiLFxyXG4gICAgbmluOiBcIjMwMzM3OTg0MTFcIixcclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiAyLFxyXG4gICAgZmlyc3ROYW1lOiBcIkZyZWRlcmlja1wiLFxyXG4gICAgbGFzdE5hbWU6IFwiUHJpbmNlXCIsXHJcbiAgICBlbWFpbDogXCJmcHJpbmNlMUBodWZmaW5ndG9ucG9zdC5jb21cIixcclxuICAgIGlwQWRkcmVzczogXCI2LjIzOS4zNy45NVwiLFxyXG4gICAgbGFuZ3VhZ2U6IFwiRW5nbGlzaFwiLFxyXG4gICAgbmluOiBcIjM4ODQxODg4ODdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiAzLFxyXG4gICAgZmlyc3ROYW1lOiBcIklhZ29cIixcclxuICAgIGxhc3ROYW1lOiBcIk1hY0NhdGhheVwiLFxyXG4gICAgZW1haWw6IFwiaW1hY2NhdGhheTJAd2l4LmNvbVwiLFxyXG4gICAgaXBBZGRyZXNzOiBcIjI0NC4yNTIuOTcuMTYzXCIsXHJcbiAgICBsYW5ndWFnZTogXCJJdGFsaWFuXCIsXHJcbiAgICBuaW46IFwiNDUwMjA4MDk0MlwiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgaWQ6IDQsXHJcbiAgICBmaXJzdE5hbWU6IFwiQmlkZGllXCIsXHJcbiAgICBsYXN0TmFtZTogXCJMaWRkYXJkXCIsXHJcbiAgICBlbWFpbDogXCJibGlkZGFyZDNAbm9hYS5nb3ZcIixcclxuICAgIGlwQWRkcmVzczogXCI2LjEwNy43OS4xNDVcIixcclxuICAgIGxhbmd1YWdlOiBcIkZyZW5jaFwiLFxyXG4gICAgbmluOiBcIjI5MzE4MTkzOTVcIixcclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiA1LFxyXG4gICAgZmlyc3ROYW1lOiBcIkNvbGFzXCIsXHJcbiAgICBsYXN0TmFtZTogXCJNb2ZmZXR0XCIsXHJcbiAgICBlbWFpbDogXCJjbW9mZmV0dDRAcHVyZXZvbHVtZS5jb21cIixcclxuICAgIGlwQWRkcmVzczogXCIyMDAuNC4yMzYuMjU1XCIsXHJcbiAgICBsYW5ndWFnZTogXCJGcmVuY2hcIixcclxuICAgIG5pbjogXCIxMjg4NzkwMjYwXCIsXHJcbiAgfSxcclxuXTtcclxuXHJcbmNvbnN0IHBhcnNlVXNlckRhdGEgPSAoZGF0YSkgPT4ge1xyXG4gIGNvbnN0IHVzZXJzRmlsdGVyZWQgPSBkYXRhLmZpbHRlcigoZWwpID0+IGVsLmxhbmd1YWdlID09PSBcIkZyZW5jaFwiKTtcclxuICBjb25zb2xlLmxvZyh1c2Vyc0ZpbHRlcmVkKTtcclxuICBjb25zdCBuZXdBcnJheSA9IHVzZXJzRmlsdGVyZWQubWFwKChlbCkgPT4gKHtcclxuICAgIG5hbWU6IGAke2ZpcnN0TmFtZX0gJHtsYXN0TmFtZX1gLFxyXG4gICAgZW1haWw6IGVsLmVtYWlsLFxyXG4gIH0pKTtcclxuICBjb25zb2xlLmxvZyhuZXdBcnJheSk7XHJcbn07XHJcblxyXG5jb25zb2xlLmxvZyhwYXJzZVVzZXJEYXRhKHVzZXJzKSk7XHJcbiIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcIjc4YWFmMTEyMTAzYWY3M2ZkZTllXCIpIl0sIm5hbWVzIjpbInVzZXJzIiwiaWQiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsImVtYWlsIiwiaXBBZGRyZXNzIiwibGFuZ3VhZ2UiLCJuaW4iLCJwYXJzZVVzZXJEYXRhIiwiZGF0YSIsInVzZXJzRmlsdGVyZWQiLCJmaWx0ZXIiLCJlbCIsImNvbnNvbGUiLCJsb2ciLCJuZXdBcnJheSIsIm1hcCIsIm5hbWUiXSwic291cmNlUm9vdCI6IiJ9