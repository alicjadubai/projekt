exercises:
    '1_Zadanie 1': { max_points: 2, disabled: false, grading: [{ points: 0.5, criterion: 'Stworzenie funkcji "without" z pobraniem reszty argumentów funkcji przy pomocy operatora reszty (...)' }, { points: 1, criterion: 'Użycie metody tablicowej "filter"' }, { points: 0.5, criterion: 'Użycie metody tablicowej "includes" lub "indexOf"' }] }
    '2_Zadanie 2': { max_points: 4, disabled: false, grading: [{ points: 0.5, criterion: 'Odpowiednie przekazanie wartości do funkcji "parseUserData" i zwrot nowej tablicy obiektów' }, { points: 1, criterion: 'Użycie metody tablicowej filter' }, { points: 1, criterion: 'Użycie metody tablicowej map do stworzenia nowych obiektów' }, { points: 0.5, criterion: 'Użycie template strings do połączenia wartości "firstName" i "lastName"' }, { points: 1, criterion: 'Posortowanie tablicy malejąco według wartości "nin"' }] }
    '3_Zadanie 3': { max_points: 6, disabled: false, grading: [{ points: 0.25, criterion: 'Utworzenie klasy "Product"' }, { points: 1, criterion: 'Ustawienie klasie "Product" odpowiednich atrybutów w konstruktorze' }, { points: 0.25, criterion: 'Dodanie do klasy "Product" działającej metody "isInStock"' }, { points: 1, criterion: 'Dodanie do klasy "Product" działającej metody "order"' }, { points: 0.5, criterion: 'Utworzenie klasy "Shoes" dziedziczącej po "Product"' }, { points: 1.25, criterion: 'Dodanie nowych atrybutów do konstruktora klasy "Shoes" wraz z użyciem "super"' }, { points: 0.75, criterion: 'Dodanie do klasy "Shoes" działającej metody "addColor" z użyciem operatora rozproszenia' }, { points: 1, criterion: 'Dodanie do klasy "Shoes" działającej metody "removeSize" z użyciem operatora metody "filter"' }] }
    '4_Zadanie 4': { max_points: 1, disabled: false, grading: [{ points: 0.25, criterion: 'Utworzenie komponentu funkcyjnego App' }, { points: 0.75, criterion: 'Wyświetlenie h1 i span, jako rodzic powinien być użyty React.Fragment (w dowolnej formie)' }] }
    '5_Zadanie 5': { max_points: 2, disabled: false, grading: [{ points: 0.25, criterion: 'Utworzenie komponentu funkcyjnego UserDetails' }, { points: 0.75, criterion: 'Przejęcie props i wyciągniecie z props odpowiednich danych' }, { points: 0.75, criterion: 'Zwrócenie JSX o odpowiedniej struktury wraz z danymi z props' }, { points: 0.25, criterion: 'Wyrenderowanie komponentu z dowolnymi danymi' }] }
    '6_Zadanie 6': { max_points: 5, disabled: false, grading: [{ points: 0.25, criterion: 'Import danych' }, { points: 1, criterion: 'Utworzenie komponentu "App" i przekazanie w nim przez props danych do "Products"' }, { points: 0.5, criterion: 'Utworzenie komponentu "Products" i odebranie danych z props' }, { points: 0.5, criterion: 'Utworzenie kompoentu "Item" i przyjęcie propsów "name" i "price"' }, { points: 2.5, criterion: 'Wykorzystanie kompoentu "Item" w "Products" wraz z wykorzystaniem metody "map" i nadanie klucza' }, { points: 0.25, criterion: 'Wyrenderowanie całości' }] }
